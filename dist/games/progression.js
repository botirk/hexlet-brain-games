"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ = require("..");

var _utils = _interopRequireDefault(require("../utils"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const instruction = 'What number is missing in the progression?';
const minNum = 1;
const maxNum = 50;
const progCount = 10;
const minStep = 2;
const maxStep = minStep + 9;

const generator = () => {
  // step for array of numbers
  const step = (0, _utils.default)(minStep, maxStep); // iterative process - generates array of numbers

  const genIter = (array, lastNum, i) => {
    if (i === 0) return array;
    const newLastNum = lastNum + step;
    array.push(newLastNum);
    return genIter(array, newLastNum, i - 1);
  };

  const progression = genIter([], (0, _utils.default)(minNum, maxNum), progCount); // generated missing index from generated array

  const missingIndex = (0, _utils.default)(0, progCount);
  const correctAnswer = String(progression[missingIndex]); // replace missing index with two dots

  progression[missingIndex] = '..';
  const question = progression.join(' ');
  return [question, correctAnswer];
};

var _default = () => (0, _.playGame)(instruction, generator);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nYW1lcy9wcm9ncmVzc2lvbi5qcyJdLCJuYW1lcyI6WyJpbnN0cnVjdGlvbiIsIm1pbk51bSIsIm1heE51bSIsInByb2dDb3VudCIsIm1pblN0ZXAiLCJtYXhTdGVwIiwiZ2VuZXJhdG9yIiwic3RlcCIsImdlbkl0ZXIiLCJhcnJheSIsImxhc3ROdW0iLCJpIiwibmV3TGFzdE51bSIsInB1c2giLCJwcm9ncmVzc2lvbiIsIm1pc3NpbmdJbmRleCIsImNvcnJlY3RBbnN3ZXIiLCJTdHJpbmciLCJxdWVzdGlvbiIsImpvaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLE1BQU1BLFdBQVcsR0FBRyw0Q0FBcEI7QUFDQSxNQUFNQyxNQUFNLEdBQUcsQ0FBZjtBQUNBLE1BQU1DLE1BQU0sR0FBRyxFQUFmO0FBQ0EsTUFBTUMsU0FBUyxHQUFHLEVBQWxCO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLENBQWhCO0FBQ0EsTUFBTUMsT0FBTyxHQUFHRCxPQUFPLEdBQUcsQ0FBMUI7O0FBQ0EsTUFBTUUsU0FBUyxHQUFHLE1BQU07QUFDdEI7QUFDQSxRQUFNQyxJQUFJLEdBQUcsb0JBQWtCSCxPQUFsQixFQUEyQkMsT0FBM0IsQ0FBYixDQUZzQixDQUd0Qjs7QUFDQSxRQUFNRyxPQUFPLEdBQUcsQ0FBQ0MsS0FBRCxFQUFRQyxPQUFSLEVBQWlCQyxDQUFqQixLQUF1QjtBQUNyQyxRQUFJQSxDQUFDLEtBQUssQ0FBVixFQUFhLE9BQU9GLEtBQVA7QUFDYixVQUFNRyxVQUFVLEdBQUdGLE9BQU8sR0FBR0gsSUFBN0I7QUFDQUUsSUFBQUEsS0FBSyxDQUFDSSxJQUFOLENBQVdELFVBQVg7QUFDQSxXQUFPSixPQUFPLENBQUNDLEtBQUQsRUFBUUcsVUFBUixFQUFvQkQsQ0FBQyxHQUFHLENBQXhCLENBQWQ7QUFDRCxHQUxEOztBQU1BLFFBQU1HLFdBQVcsR0FBR04sT0FBTyxDQUFDLEVBQUQsRUFBSyxvQkFBa0JQLE1BQWxCLEVBQTBCQyxNQUExQixDQUFMLEVBQXdDQyxTQUF4QyxDQUEzQixDQVZzQixDQVd0Qjs7QUFDQSxRQUFNWSxZQUFZLEdBQUcsb0JBQWtCLENBQWxCLEVBQXFCWixTQUFyQixDQUFyQjtBQUNBLFFBQU1hLGFBQWEsR0FBR0MsTUFBTSxDQUFDSCxXQUFXLENBQUNDLFlBQUQsQ0FBWixDQUE1QixDQWJzQixDQWN0Qjs7QUFDQUQsRUFBQUEsV0FBVyxDQUFDQyxZQUFELENBQVgsR0FBNEIsSUFBNUI7QUFDQSxRQUFNRyxRQUFRLEdBQUdKLFdBQVcsQ0FBQ0ssSUFBWixDQUFpQixHQUFqQixDQUFqQjtBQUNBLFNBQU8sQ0FBQ0QsUUFBRCxFQUFXRixhQUFYLENBQVA7QUFDRCxDQWxCRDs7ZUFtQmUsTUFBTSxnQkFBU2hCLFdBQVQsRUFBc0JNLFNBQXRCLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwbGF5R2FtZSB9IGZyb20gJy4uJztcbmltcG9ydCBnZW5lcmF0ZVJhbmRvbU51bSBmcm9tICcuLi91dGlscyc7XG5cbmNvbnN0IGluc3RydWN0aW9uID0gJ1doYXQgbnVtYmVyIGlzIG1pc3NpbmcgaW4gdGhlIHByb2dyZXNzaW9uPyc7XG5jb25zdCBtaW5OdW0gPSAxO1xuY29uc3QgbWF4TnVtID0gNTA7XG5jb25zdCBwcm9nQ291bnQgPSAxMDtcbmNvbnN0IG1pblN0ZXAgPSAyO1xuY29uc3QgbWF4U3RlcCA9IG1pblN0ZXAgKyA5O1xuY29uc3QgZ2VuZXJhdG9yID0gKCkgPT4ge1xuICAvLyBzdGVwIGZvciBhcnJheSBvZiBudW1iZXJzXG4gIGNvbnN0IHN0ZXAgPSBnZW5lcmF0ZVJhbmRvbU51bShtaW5TdGVwLCBtYXhTdGVwKTtcbiAgLy8gaXRlcmF0aXZlIHByb2Nlc3MgLSBnZW5lcmF0ZXMgYXJyYXkgb2YgbnVtYmVyc1xuICBjb25zdCBnZW5JdGVyID0gKGFycmF5LCBsYXN0TnVtLCBpKSA9PiB7XG4gICAgaWYgKGkgPT09IDApIHJldHVybiBhcnJheTtcbiAgICBjb25zdCBuZXdMYXN0TnVtID0gbGFzdE51bSArIHN0ZXA7XG4gICAgYXJyYXkucHVzaChuZXdMYXN0TnVtKTtcbiAgICByZXR1cm4gZ2VuSXRlcihhcnJheSwgbmV3TGFzdE51bSwgaSAtIDEpO1xuICB9O1xuICBjb25zdCBwcm9ncmVzc2lvbiA9IGdlbkl0ZXIoW10sIGdlbmVyYXRlUmFuZG9tTnVtKG1pbk51bSwgbWF4TnVtKSwgcHJvZ0NvdW50KTtcbiAgLy8gZ2VuZXJhdGVkIG1pc3NpbmcgaW5kZXggZnJvbSBnZW5lcmF0ZWQgYXJyYXlcbiAgY29uc3QgbWlzc2luZ0luZGV4ID0gZ2VuZXJhdGVSYW5kb21OdW0oMCwgcHJvZ0NvdW50KTtcbiAgY29uc3QgY29ycmVjdEFuc3dlciA9IFN0cmluZyhwcm9ncmVzc2lvblttaXNzaW5nSW5kZXhdKTtcbiAgLy8gcmVwbGFjZSBtaXNzaW5nIGluZGV4IHdpdGggdHdvIGRvdHNcbiAgcHJvZ3Jlc3Npb25bbWlzc2luZ0luZGV4XSA9ICcuLic7XG4gIGNvbnN0IHF1ZXN0aW9uID0gcHJvZ3Jlc3Npb24uam9pbignICcpO1xuICByZXR1cm4gW3F1ZXN0aW9uLCBjb3JyZWN0QW5zd2VyXTtcbn07XG5leHBvcnQgZGVmYXVsdCAoKSA9PiBwbGF5R2FtZShpbnN0cnVjdGlvbiwgZ2VuZXJhdG9yKTtcbiJdfQ==